scopeName: source.livescript

patterns:
- include: '#expr'

repository:
  expr:
    patterns:
    - include: '#string-triple-single'
    - include: '#string-triple-double'
    - include: '#string-single'
    - include: '#string-double'
    - include: '#string-backslash'
    - include: '#embed-backtick'
    - include: '#list-words'
    - include: '#comment-line'
    - include: '#comment-block'
    - include: '#heregex'
    - include: '#regexp'
    - include: '#function-arrow'
    - include: '#label'
    - include: '#number'
    - include: '#static-methods'
    - include: '#proto-methods'
    - include: '#property'
    - include: '#operator'
    - include: '#function-named'
    - include: '#class'
    - include: '#declare'
    - include: '#storage'
    - include: '#constant'
    - include: '#keyword'
    - include: '#window-props'
    - include: '#window-methods'
    - include: '#punctuation'
    - include: '#variable'

  string-triple-single:
    patterns:
    - begin: \'''
      end: \'''
      captures:
        0:
          name: punctuation.livescript
      name: string.quoted.single.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript

  string-triple-double:
    patterns:
    - begin: \"""
      end: \"""
      captures:
        0:
          name: punctuation.livescript
      name: string.quoted.double.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript
      - begin: \#{
        end: \}
        captures:
          0:
            name: variable.parameter.livescript
        patterns:
        - include: '#expr'
      - match: \#(?:@?[a-zA-Z_$][\w$]*|@\d*)
        name: variable.parameter.livescript

  string-single:
    patterns:
    - begin: \'
      end: \'
      captures:
        0:
          name: punctuation.livescript
      name: string.quoted.single.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript

  string-double:
    patterns:
    - begin: \"
      end: \"
      captures:
        0:
          name: punctuation.livescript
      name: string.quoted.double.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript
      - begin: \#{
        end: \}
        captures:
          0:
            name: variable.parameter.livescript
        patterns:
        - include: '#expr'
      - match: \#(?:@?[a-zA-Z_$][\w$]*|@\d*)
        name: variable.parameter.livescript

  string-backslash:
    patterns:
    - match: (\\)(\S[^,;)\]}\s]*)
      name: string.other.livescript
      captures:
        1:
          name: punctuation.livescript
        2:
          patterns:
          - match: \\(?:.|$)
            name: constant.character.escape.livescript

  embed-backtick:
    patterns:
    - begin: \``
      end: \``
      captures:
        0:
          name: punctuation
      patterns:
      - include: source.js

  list-words:
    patterns:
    - begin: <\[
      end: \]>
      captures:
        0:
          name: punctuation.livescript
          # name: keyword.other
      name: string.quoted.other.livescript

  comment-line:
    patterns:
    - match: \#.*
      name: comment.line.number-sign.livescript

  comment-block:
    patterns:
    - begin: /\*
      end: \*/
      name: comment.block.livescript

  heregex:
    patterns:
    - begin: //
      end: //[dgimsuy]{0,7}
      captures:
        0:
          name: keyword.other.livescript
      name: string.regexp.livescript
      patterns:
      - include: '#heregex-content'

  heregex-content:
    patterns:
    - match: \\.
      name: constant.character.escape.livescript
    - match: \.
      name: constant.other.livescript
    - match: '[+*?^$]'
      name: keyword.other.livescript
    - match: '\{(\d+,\d+|\d+,|,\d+|\d+)\}'
      name: keyword.other.livescript
    - match: ' #.*'
      name: comment.line.number-sign.livescript
    - begin: (\[)(\^)?-?
      end: -?(\])
      beginCaptures:
        1:
          name: keyword.other.livescript
        2:
          name: keyword.other.livescript
      endCaptures:
        1:
          name: keyword.other.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript
      - match: \-
        name: keyword.operator.livescript
    - begin: \((\?(<?[=!]|:))?
      end: \)
      captures:
        0:
          name: keyword.other.livescript
      patterns:
      - include: '#heregex-content'
    - begin: \#{
      end: \}
      captures:
        0:
          name: variable.parameter.livescript
      patterns:
      - include: '#expr'
    - match: \#(?:@?[a-zA-Z_$][\w$]*|@)
      name: variable.parameter.livescript

  regexp:
    patterns:
    - begin: /(?![= )])
      end: /[dgimsuy]{0,7}|$
      captures:
        0:
          name: keyword.other.livescript
      name: string.regexp.livescript
      patterns:
      - include: '#regexp-content'

  regexp-content:
    patterns:
    - match: \\.
      name: constant.character.escape.livescript
    - match: \.
      name: constant.other.livescript
    - match: '[+*?^$]'
      name: keyword.other.livescript
    - match: '\{(\d+,\d+|\d+,|,\d+|\d+)\}'
      name: keyword.other.livescript
    - begin: (\[)(\^)?-?
      end: -?(\])|$
      beginCaptures:
        1:
          name: keyword.other.livescript
        2:
          name: keyword.other.livescript
      endCaptures:
        1:
          name: keyword.other.livescript
      patterns:
      - match: \\.
        name: constant.character.escape.livescript
      - match: \-
        name: keyword.operator.livescript
    - begin: \((\?(<?[=!]|:))?
      end: \)|$
      captures:
        0:
          name: keyword.other.livescript
      patterns:
      - include: '#regexp-content'

  function-arrow:
    patterns:
    - match: (?:(?:([.~]?)([\w$]+)|([a-zA-Z_$][\w$]*))\s*(:=|[:=]))?\s*(?:(\()(.+)(\)))?\s*(!?[-~]>>?\*?)
      captures:
        1:
          name: punctuation.accessor.livescript
        2:
          name: entity.name.function.livescript
        3:
          name: entity.name.function.livescript
        4:
          name: keyword.operator.livescript
        5:
          name: punctuation.definition.parameters.begin.livescript
        6:
          patterns:
          - include: '#expr'
        7:
          name: punctuation.definition.parameters.end.livescript
        8:
          name: keyword.other.livescript

  label:
    patterns:
    - match: (:)([a-zA-Z_$][\w$]*)
      captures:
        1:
          name: punctuation.separator.label.livescript
        2:
          name: entity.name.label.livescript
    - match: (break|continue)\s+([a-zA-Z_$][\w$]*)
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: entity.name.label.livescript

  number:
    patterns:
    - match: \d\d?~[\da-zA-Z]+
      name: constant.numeric.livescript
    - match: \d+n
      name: constant.numeric.livescript
    - match: \d+(\.\d+)?([eE]-?\d+)?[\w$]*
      name: constant.numeric.livescript

  static-methods:
    patterns:
    ##staticMethods##

  proto-methods:
    patterns:
    - match: (?:(?<=["')\]}?!]~?|[\w.]~)|(\.= *)|(\.))(##protoMethods##)(?![\w$])
      captures:
        1:
          name: keyword.operator.livescript
        2:
          name: punctuation.accessor.livescript
        3:
          name: entity.name.function.livescript

  property:
    patterns:
    - match: (@)([a-zA-Z_$][\w$]*)?
      captures:
        1:
          name: storage.type.livescript
        2:
          patterns:
          - include: '#variable'
    - match: (\.= *|::= *|\.\.|::)([\w$]+)
      captures:
        1:
          name: keyword.operator.livescript
        2:
          patterns:
          - include: '#variable'
    - match: ([a-zA-Z_$][\w$]*)(?= *:[^:])
      name: variable.other.livescript
    - match: (\.)([a-zA-Z_$][\w$]*)
      captures:
        1:
          name: punctuation.accessor.livescript
        2:
          patterns:
          - include: '#variable'
    # - match: (?<=["')\]}/]|[\w$])(~)([\w$]+)
    #   captures:
    #     1:
    #       name: punctuation.accessor.livescript
    #     2:
    #       name: variable.other.livescript
    - match: (?<=["')\]}/]~?)[\w$]+
      captures:
        0:
          patterns:
          - include: '#variable'

  operator:
    patterns:
    - match: \.(>>>?|<<|[&|^])\.|<<<?<?| \. |!~=|\.\.\.?|[=!~:.]=|\+\+|--|\*\*|%%|::|=>|>>|\|>|<\||[<>]\?|&&|\|\|?|\^\^?|[<>]=?|[+\-*/%!?=~]
      name: keyword.operator.livescript
    - match: (is|isnt|and|x?or|not|delete|typeof|instanceof)(?![\w$])
      name: keyword.operator.livescript

  function-named:
    patterns:
    - match: (!)?(function) +([a-zA-Z_$][\w$]*)
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: keyword.control.livescript
        3:
          name: entity.name.function.livescript

  class:
    patterns:
    - match: '(class) +(extends) +([a-zA-Z_$][\w$]*)(?: +(implements) +(.+))?'
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: storage.modifier.livescript
        3:
          name: storage.type.livescript
        4:
          name: storage.modifier.livescript
        5:
          patterns:
          - include: '#class-implements'
    - match: '(class) +(implements) +(.+)'
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: storage.modifier.livescript
        3:
          patterns:
          - include: '#class-implements'
    - match: '(class) +([a-zA-Z_$][\w$]*)(?: +(extends) +([a-zA-Z_$][\w$]*))?(?: +(implements) +(.+))?'
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: entity.name.function.livescript
        3:
          name: storage.modifier.livescript
        4:
          name: storage.type.livescript
        5:
          name: storage.modifier.livescript
        6:
          patterns:
          - include: '#class-implements'

  class-implements:
    patterns:
    - match: \,
      name: punctuation.separator.comma.livescript
    - match: '[a-zA-Z_$][\w$]*'
      name: storage.type.livescript

  declare:
    patterns:
    - match: (const) ([a-zA-Z_$][\w$]*)
      captures:
        1:
          name: keyword.control.livescript
        2:
          name: constant.language.livescript

  storage:
    patterns:
    - match: (arguments|this|that|super|it|e|_)(?![\w$])
      name: storage.type.livescript
    - match: (&)(?!&)
      name: storage.type.livescript

  constant:
    patterns:
    - match: (yes|no|true|false|on|off|void|null|undefined|NaN|Infinity)(?![\w$])
      name: constant.language.livescript

  keyword:
    patterns:
    - match: (if|unless|then|else|switch|match|case|default|otherwise|fallthrough|for|own|ever|from|to|til|by|when|while|until|loop|in|of|let|do|var|const|break|continue|return|yield|await|try|catch|finally|throw|new|with|debugger|function|class|extends|implements)(?![\w$])
      name: keyword.control.livescript

  window-props:
    patterns:
    - match: (document|location|navigator|screen|history|localStorage|sessionStorage|console|process|module|livescript|stylus|m|fs|vscode|dayjs|\$|os)(?![\w$])
      name: storage.type.livescript

  window-methods:
    patterns:
    - match: (##windowMethods##|require|import)(?![\w$])
      name: entity.name.function.livescript

  punctuation:
    patterns:
    - match: \.
      name: punctuation.accessor.livescript
    - match: \,
      name: punctuation.separator.comma.livescript
    - match: \;
      name: punctuation.terminator.statement.livescript

  variable:
    patterns:
    - match: '[A-Z][A-Z0-9_$]*(?![\w$])'
      name: constant.language.livescript
    - match: '[A-Z][\w$]+(?![\w$])'
      name: storage.type.livescript
    - match: '[a-zA-Z_$][\w$]*'
      name: variable.other.livescript
